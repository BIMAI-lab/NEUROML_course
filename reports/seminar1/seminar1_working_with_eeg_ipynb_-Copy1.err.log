Traceback (most recent call last):
  File "C:\Users\Alexander\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Alexander\anaconda3\lib\site-packages\nbclient\client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Alexander\anaconda3\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\Alexander\anaconda3\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\Alexander\anaconda3\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "C:\Users\Alexander\anaconda3\lib\site-packages\nbclient\client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Alexander\anaconda3\lib\site-packages\nbclient\client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "C:\Users\Alexander\anaconda3\lib\site-packages\nbclient\client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
sample.set_montage(ten_twenty_montage)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
[1;32mC:\Users\ALEXAN~1\AppData\Local\Temp/ipykernel_14644/9837167.py[0m in [0;36m<module>[1;34m[0m
[1;32m----> 1[1;33m [0msample[0m[1;33m.[0m[0mset_montage[0m[1;33m([0m[0mten_twenty_montage[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m
[1;32m<decorator-gen-25>[0m in [0;36mset_montage[1;34m(self, montage, match_case, match_alias, on_missing, verbose)[0m

[1;32m~\anaconda3\lib\site-packages\mne\_fiff\meas_info.py[0m in [0;36mset_montage[1;34m(self, montage, match_case, match_alias, on_missing, verbose)[0m
[0;32m    425[0m [1;33m[0m[0m
[0;32m    426[0m         [0minfo[0m [1;33m=[0m [0mself[0m [1;32mif[0m [0misinstance[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mInfo[0m[1;33m)[0m [1;32melse[0m [0mself[0m[1;33m.[0m[0minfo[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 427[1;33m         [0m_set_montage[0m[1;33m([0m[0minfo[0m[1;33m,[0m [0mmontage[0m[1;33m,[0m [0mmatch_case[0m[1;33m,[0m [0mmatch_alias[0m[1;33m,[0m [0mon_missing[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    428[0m         [1;32mreturn[0m [0mself[0m[1;33m[0m[1;33m[0m[0m
[0;32m    429[0m [1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\mne\channels\montage.py[0m in [0;36m_set_montage[1;34m(***failed resolving arguments***)[0m
[0;32m   1256[0m             [1;34mf"position{pl} {are_is} allowed to be unknown in your analyses."[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1257[0m         )
[1;32m-> 1258[1;33m         [0m_on_missing[0m[1;33m([0m[0mon_missing[0m[1;33m,[0m [0mmissing_coord_msg[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1259[0m [1;33m[0m[0m
[0;32m   1260[0m         [1;31m# set ch coordinates and names from digmontage or nan coords[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\mne\utils\check.py[0m in [0;36m_on_missing[1;34m(on_missing, msg, name, error_klass)[0m
[0;32m   1188[0m     [0mon_missing[0m [1;33m=[0m [1;34m"warn"[0m [1;32mif[0m [0mon_missing[0m [1;33m==[0m [1;34m"warning"[0m [1;32melse[0m [0mon_missing[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1189[0m     [1;32mif[0m [0mon_missing[0m [1;33m==[0m [1;34m"raise"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1190[1;33m         [1;32mraise[0m [0merror_klass[0m[1;33m([0m[0mmsg[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1191[0m     [1;32melif[0m [0mon_missing[0m [1;33m==[0m [1;34m"warn"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1192[0m         [0mwarn[0m[1;33m([0m[0mmsg[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;31mValueError[0m: DigMontage is only a subset of info. There are 28 channel positions not present in the DigMontage. The channels missing from the montage are:

['Fc5', 'Fc3', 'Fc1', 'Fcz', 'Fc2', 'Fc4', 'Fc6', 'Cp5', 'Cp3', 'Cp1', 'Cpz', 'Cp2', 'Cp4', 'Cp6', 'Af7', 'Af3', 'Afz', 'Af4', 'Af8', 'Ft7', 'Ft8', 'Tp7', 'Tp8', 'Po7', 'Po3', 'Poz', 'Po4', 'Po8'].

Consider using inst.rename_channels to match the montage nomenclature, or inst.set_channel_types if these are not EEG channels, or use the on_missing parameter if the channel positions are allowed to be unknown in your analyses.
ValueError: DigMontage is only a subset of info. There are 28 channel positions not present in the DigMontage. The channels missing from the montage are:

['Fc5', 'Fc3', 'Fc1', 'Fcz', 'Fc2', 'Fc4', 'Fc6', 'Cp5', 'Cp3', 'Cp1', 'Cpz', 'Cp2', 'Cp4', 'Cp6', 'Af7', 'Af3', 'Afz', 'Af4', 'Af8', 'Ft7', 'Ft8', 'Tp7', 'Tp8', 'Po7', 'Po3', 'Poz', 'Po4', 'Po8'].

Consider using inst.rename_channels to match the montage nomenclature, or inst.set_channel_types if these are not EEG channels, or use the on_missing parameter if the channel positions are allowed to be unknown in your analyses.

